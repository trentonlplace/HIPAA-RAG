{
  "$schema": "https://schema.management.azure.com/schemas/2021-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "[PHI] HIPAA-Compliant Backup and Disaster Recovery Template",
    "classification": "PHI-CRITICAL",
    "author": "HIPAA Security Team",
    "version": "1.0.0",
    "lastUpdated": "2025-08-01"
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "metadata": {
        "description": "Environment name for resource naming"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Primary Azure region for deployment"
      }
    },
    "secondaryLocation": {
      "type": "string",
      "defaultValue": "westus2",
      "metadata": {
        "description": "Secondary Azure region for disaster recovery"
      }
    },
    "resourceToken": {
      "type": "string",
      "metadata": {
        "description": "Unique token for resource naming"
      }
    },
    "backupRetentionDays": {
      "type": "int",
      "defaultValue": 2555,
      "minValue": 90,
      "metadata": {
        "description": "Backup retention in days (minimum 7 years for HIPAA compliance)"
      }
    },
    "enableGeoRedundancy": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable geo-redundant backups for disaster recovery"
      }
    },
    "rtoRequirementHours": {
      "type": "int",
      "defaultValue": 4,
      "minValue": 1,
      "maxValue": 24,
      "metadata": {
        "description": "Recovery Time Objective in hours"
      }
    },
    "rpoRequirementHours": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 24,
      "metadata": {
        "description": "Recovery Point Objective in hours"
      }
    }
  },
  "variables": {
    "resourcePrefix": "[concat('hipaa-rag-', parameters('resourceToken'))]",
    "tags": {
      "Environment": "[parameters('environmentName')]",
      "Compliance": "HIPAA",
      "DataClassification": "PHI-Backup",
      "SecurityLevel": "Critical",
      "Owner": "HIPAA-Security-Team",
      "Purpose": "Disaster-Recovery"
    },
    "recoveryServicesVaultName": "[concat('rsv-', variables('resourcePrefix'))]",
    "backupPolicyName": "[concat('bp-', variables('resourcePrefix'))]",
    "siteRecoveryVaultName": "[concat('asr-', variables('resourcePrefix'))]",
    "storageAccountName": "[concat('stbkp', replace(parameters('resourceToken'), '-', ''))]",
    "secondaryStorageAccountName": "[concat('stbkpdr', replace(parameters('resourceToken'), '-', ''))]",
    "automationAccountName": "[concat('aa-dr-', variables('resourcePrefix'))]",
    "runbookName": "HIPAA-Disaster-Recovery-Runbook",
    "logAnalyticsWorkspaceName": "[concat('log-dr-', variables('resourcePrefix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "[if(parameters('enableGeoRedundancy'), 'Standard_RAGRS', 'Standard_LRS')]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": false,
        "publicNetworkAccess": "Disabled",
        "encryption": {
          "requireInfrastructureEncryption": true,
          "services": {
            "blob": {
              "enabled": true,
              "keyType": "Account"
            },
            "file": {
              "enabled": true,
              "keyType": "Account"
            }
          }
        },
        "accessTier": "Cool"
      }
    },
    {
      "condition": "[parameters('enableGeoRedundancy')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[variables('secondaryStorageAccountName')]",
      "location": "[parameters('secondaryLocation')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard_RAGRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": false,
        "publicNetworkAccess": "Disabled",
        "encryption": {
          "requireInfrastructureEncryption": true,
          "services": {
            "blob": {
              "enabled": true,
              "keyType": "Account"
            },
            "file": {
              "enabled": true,
              "keyType": "Account"
            }
          }
        },
        "accessTier": "Cool"
      }
    },
    {
      "type": "Microsoft.RecoveryServices/vaults",
      "apiVersion": "2021-12-01",
      "name": "[variables('recoveryServicesVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "RS0",
        "tier": "Standard"
      },
      "properties": {
        "publicNetworkAccess": "Disabled"
      }
    },
    {
      "type": "Microsoft.RecoveryServices/vaults/backupstorageconfig",
      "apiVersion": "2021-12-01",
      "name": "[concat(variables('recoveryServicesVaultName'), '/vaultstorageconfig')]",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', variables('recoveryServicesVaultName'))]"
      ],
      "properties": {
        "storageModelType": "[if(parameters('enableGeoRedundancy'), 'GeoRedundant', 'LocallyRedundant')]",
        "crossRegionRestoreFlag": "[parameters('enableGeoRedundancy')]"
      }
    },
    {
      "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
      "apiVersion": "2021-12-01",
      "name": "[concat(variables('recoveryServicesVaultName'), '/', variables('backupPolicyName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', variables('recoveryServicesVaultName'))]"
      ],
      "properties": {
        "backupManagementType": "AzureIaasVM",
        "instantRpRetentionRangeInDays": 5,
        "schedulePolicy": {
          "schedulePolicyType": "SimpleSchedulePolicy",
          "scheduleRunFrequency": "Daily",
          "scheduleRunTimes": [
            "2025-01-01T02:00:00.000Z"
          ],
          "scheduleWeeklyFrequency": 0
        },
        "retentionPolicy": {
          "retentionPolicyType": "LongTermRetentionPolicy",
          "dailySchedule": {
            "retentionTimes": [
              "2025-01-01T02:00:00.000Z"
            ],
            "retentionDuration": {
              "count": "[parameters('backupRetentionDays')]",
              "durationType": "Days"
            }
          },
          "weeklySchedule": {
            "daysOfTheWeek": [
              "Sunday"
            ],
            "retentionTimes": [
              "2025-01-01T02:00:00.000Z"
            ],
            "retentionDuration": {
              "count": 104,
              "durationType": "Weeks"
            }
          },
          "monthlySchedule": {
            "retentionScheduleFormatType": "Daily",
            "retentionScheduleDaily": {
              "daysOfTheMonth": [
                {
                  "date": 1,
                  "isLast": false
                }
              ]
            },
            "retentionTimes": [
              "2025-01-01T02:00:00.000Z"
            ],
            "retentionDuration": {
              "count": 84,
              "durationType": "Months"
            }
          },
          "yearlySchedule": {
            "retentionScheduleFormatType": "Daily",
            "monthsOfYear": [
              "January"
            ],
            "retentionScheduleDaily": {
              "daysOfTheMonth": [
                {
                  "date": 1,
                  "isLast": false
                }
              ]
            },
            "retentionTimes": [
              "2025-01-01T02:00:00.000Z"
            ],
            "retentionDuration": {
              "count": 10,
              "durationType": "Years"
            }
          }
        },
        "timeZone": "UTC"
      }
    },
    {
      "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
      "apiVersion": "2021-12-01",
      "name": "[concat(variables('recoveryServicesVaultName'), '/SqlPolicy')]",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', variables('recoveryServicesVaultName'))]"
      ],
      "properties": {
        "backupManagementType": "AzureWorkload",
        "workLoadType": "SQLDataBase",
        "settings": {
          "timeZone": "UTC",
          "issqlcompression": true,
          "isCompression": true
        },
        "subProtectionPolicy": [
          {
            "policyType": "Full",
            "schedulePolicy": {
              "schedulePolicyType": "SimpleSchedulePolicy",
              "scheduleRunFrequency": "Weekly",
              "scheduleRunDays": [
                "Sunday"
              ],
              "scheduleRunTimes": [
                "2025-01-01T02:00:00.000Z"
              ]
            },
            "retentionPolicy": {
              "retentionPolicyType": "LongTermRetentionPolicy",
              "weeklySchedule": {
                "daysOfTheWeek": [
                  "Sunday"
                ],
                "retentionTimes": [
                  "2025-01-01T02:00:00.000Z"
                ],
                "retentionDuration": {
                  "count": 104,
                  "durationType": "Weeks"
                }
              },
              "monthlySchedule": {
                "retentionScheduleFormatType": "Weekly",
                "retentionScheduleWeekly": {
                  "daysOfTheWeek": [
                    "Sunday"
                  ],
                  "weeksOfTheMonth": [
                    "First"
                  ]
                },
                "retentionTimes": [
                  "2025-01-01T02:00:00.000Z"
                ],
                "retentionDuration": {
                  "count": 60,
                  "durationType": "Months"
                }
              },
              "yearlySchedule": {
                "retentionScheduleFormatType": "Weekly",
                "monthsOfYear": [
                  "January"
                ],
                "retentionScheduleWeekly": {
                  "daysOfTheWeek": [
                    "Sunday"
                  ],
                  "weeksOfTheMonth": [
                    "First"
                  ]
                },
                "retentionTimes": [
                  "2025-01-01T02:00:00.000Z"
                ],
                "retentionDuration": {
                  "count": 10,
                  "durationType": "Years"
                }
              }
            }
          },
          {
            "policyType": "Differential",
            "schedulePolicy": {
              "schedulePolicyType": "SimpleSchedulePolicy",
              "scheduleRunFrequency": "Weekly",
              "scheduleRunDays": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "scheduleRunTimes": [
                "2025-01-01T02:00:00.000Z"
              ]
            },
            "retentionPolicy": {
              "retentionPolicyType": "SimpleRetentionPolicy",
              "retentionDuration": {
                "count": 30,
                "durationType": "Days"
              }
            }
          },
          {
            "policyType": "Log",
            "schedulePolicy": {
              "schedulePolicyType": "LogSchedulePolicy",
              "scheduleFrequencyInMins": 15
            },
            "retentionPolicy": {
              "retentionPolicyType": "SimpleRetentionPolicy",
              "retentionDuration": {
                "count": "[parameters('backupRetentionDays')]",
                "durationType": "Days"
              }
            }
          }
        ]
      }
    },
    {
      "condition": "[parameters('enableGeoRedundancy')]",
      "type": "Microsoft.RecoveryServices/vaults",
      "apiVersion": "2021-12-01",
      "name": "[variables('siteRecoveryVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "RS0",
        "tier": "Standard"
      },
      "properties": {
        "publicNetworkAccess": "Disabled"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-12-01-preview",
      "name": "[variables('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 90,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts",
      "apiVersion": "2020-01-13-preview",
      "name": "[variables('automationAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "sku": {
          "name": "Basic"
        },
        "publicNetworkAccess": false,
        "disableLocalAuth": true
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "apiVersion": "2020-01-13-preview",
      "name": "[concat(variables('automationAccountName'), '/', variables('runbookName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
      ],
      "properties": {
        "runbookType": "PowerShell",
        "logVerbose": true,
        "logProgress": true,
        "description": "HIPAA-compliant disaster recovery automation runbook",
        "publishContentLink": {
          "uri": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.automation/101-automation-runbook-getvms/Runbooks/Get-AzureVMTutorial.ps1"
        }
      }
    },
    {
      "type": "Microsoft.RecoveryServices/vaults/providers/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "name": "[concat(variables('recoveryServicesVaultName'), '/Microsoft.Insights/backup-audit-logs')]",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', variables('recoveryServicesVaultName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ],
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "logs": [
          {
            "category": "CoreAzureBackup",
            "enabled": true,
            "retentionPolicy": {
              "days": 2555,
              "enabled": true
            }
          },
          {
            "category": "AddonAzureBackupJobs",
            "enabled": true,
            "retentionPolicy": {
              "days": 2555,
              "enabled": true
            }
          },
          {
            "category": "AddonAzureBackupAlerts",
            "enabled": true,
            "retentionPolicy": {
              "days": 2555,
              "enabled": true
            }
          },
          {
            "category": "AddonAzureBackupPolicy",
            "enabled": true,
            "retentionPolicy": {
              "days": 2555,
              "enabled": true
            }
          },
          {
            "category": "AddonAzureBackupStorage",
            "enabled": true,
            "retentionPolicy": {
              "days": 2555,
              "enabled": true
            }
          },
          {
            "category": "AddonAzureBackupProtectedInstance",
            "enabled": true,
            "retentionPolicy": {
              "days": 2555,
              "enabled": true
            }
          }
        ],
        "metrics": [
          {
            "category": "Health",
            "enabled": true,
            "retentionPolicy": {
              "days": 90,
              "enabled": true
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "recoveryServicesVaultName": {
      "type": "string",
      "value": "[variables('recoveryServicesVaultName')]"
    },
    "recoveryServicesVaultResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.RecoveryServices/vaults', variables('recoveryServicesVaultName'))]"
    },
    "backupPolicyName": {
      "type": "string",
      "value": "[variables('backupPolicyName')]"
    },
    "siteRecoveryVaultName": {
      "type": "string",
      "value": "[if(parameters('enableGeoRedundancy'), variables('siteRecoveryVaultName'), '')]"
    },
    "backupStorageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "secondaryBackupStorageAccountName": {
      "type": "string",
      "value": "[if(parameters('enableGeoRedundancy'), variables('secondaryStorageAccountName'), '')]"
    },
    "automationAccountName": {
      "type": "string",
      "value": "[variables('automationAccountName')]"
    },
    "drConfiguration": {
      "type": "object",
      "value": {
        "geoRedundancyEnabled": "[parameters('enableGeoRedundancy')]",
        "backupRetentionDays": "[parameters('backupRetentionDays')]",
        "rtoRequirementHours": "[parameters('rtoRequirementHours')]",
        "rpoRequirementHours": "[parameters('rpoRequirementHours')]",
        "crossRegionRestoreEnabled": "[parameters('enableGeoRedundancy')]",
        "automatedRecoveryEnabled": true,
        "auditLoggingEnabled": true,
        "complianceLevel": "HIPAA-Compliant",
        "primaryRegion": "[parameters('location')]",
        "secondaryRegion": "[parameters('secondaryLocation')]"
      }
    }
  }
}