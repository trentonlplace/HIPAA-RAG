{
  "$schema": "https://schema.management.azure.com/schemas/2021-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "[PHI] HIPAA-Compliant Network Security and Isolation Template",
    "classification": "PHI-CRITICAL",
    "author": "HIPAA Security Team",
    "version": "1.0.0",
    "lastUpdated": "2025-08-01"
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "metadata": {
        "description": "Environment name for resource naming"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for deployment"
      }
    },
    "resourceToken": {
      "type": "string",
      "metadata": {
        "description": "Unique token for resource naming"
      }
    },
    "allowedIPRanges": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Array of allowed IP ranges for network access (empty for maximum security)"
      }
    },
    "enableDDoSProtection": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable DDoS Protection Standard"
      }
    }
  },
  "variables": {
    "resourcePrefix": "[concat('hipaa-rag-', parameters('resourceToken'))]",
    "tags": {
      "Environment": "[parameters('environmentName')]",
      "Compliance": "HIPAA",
      "DataClassification": "PHI-Network",
      "SecurityLevel": "Critical",
      "Owner": "HIPAA-Security-Team"
    },
    "virtualNetworkName": "[concat('vnet-', variables('resourcePrefix'))]",
    "ddosProtectionPlanName": "[concat('ddos-', variables('resourcePrefix'))]",
    "applicationGatewayName": "[concat('agw-', variables('resourcePrefix'))]",
    "wafPolicyName": "[concat('waf-', variables('resourcePrefix'))]",
    "bastionHostName": "[concat('bastion-', variables('resourcePrefix'))]",
    "bastionPublicIpName": "[concat('pip-bastion-', variables('resourcePrefix'))]",
    "natGatewayName": "[concat('nat-', variables('resourcePrefix'))]",
    "natPublicIpName": "[concat('pip-nat-', variables('resourcePrefix'))]",
    "routeTableName": "[concat('rt-', variables('resourcePrefix'))]",
    "networkWatcherName": "[concat('nw-', variables('resourcePrefix'))]",
    "flowLogStorageName": "[concat('stflow', replace(parameters('resourceToken'), '-', ''))]"
  },
  "resources": [
    {
      "condition": "[parameters('enableDDoSProtection')]",
      "type": "Microsoft.Network/ddosProtectionPlans",
      "apiVersion": "2021-02-01",
      "name": "[variables('ddosProtectionPlanName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[variables('flowLogStorageName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "publicNetworkAccess": "Disabled",
        "encryption": {
          "requireInfrastructureEncryption": true,
          "services": {
            "blob": {
              "enabled": true
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-02-01",
      "name": "[variables('bastionPublicIpName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[concat('bastion-', parameters('resourceToken'))]"
        },
        "ddosSettings": {
          "protectionMode": "VirtualNetworkInherited"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-02-01",
      "name": "[variables('natPublicIpName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "ddosSettings": {
          "protectionMode": "VirtualNetworkInherited"
        }
      }
    },
    {
      "type": "Microsoft.Network/natGateways",
      "apiVersion": "2021-02-01",
      "name": "[variables('natGatewayName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('natPublicIpName'))]"
      ],
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIpAddresses": [
          {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('natPublicIpName'))]"
          }
        ],
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2021-02-01",
      "name": "[variables('routeTableName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "routes": [
          {
            "name": "InternetRoute",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "Internet"
            }
          },
          {
            "name": "VNetRoute",
            "properties": {
              "addressPrefix": "10.0.0.0/16",
              "nextHopType": "VnetLocal"
            }
          }
        ],
        "disableBgpRoutePropagation": true
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-02-01",
      "name": "nsg-bastion",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowHTTPSInbound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowGatewayManagerInbound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "GatewayManager",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowAzureLoadBalancerInbound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 140,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowBastionHostCommunication",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRanges": [
                "8080",
                "5701"
              ],
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 150,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowSSHRDPOutbound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRanges": [
                "22",
                "3389"
              ],
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          },
          {
            "name": "AllowAzureCloudOutbound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "AzureCloud",
              "access": "Allow",
              "priority": 110,
              "direction": "Outbound"
            }
          },
          {
            "name": "AllowBastionCommunication",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRanges": [
                "8080",
                "5701"
              ],
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 120,
              "direction": "Outbound"
            }
          },
          {
            "name": "AllowGetSessionInformation",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 130,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-02-01",
      "name": "nsg-app-services",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowHTTPSInbound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "DenyAllHTTPInbound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowAppServiceManagement",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "454-455",
              "sourceAddressPrefix": "AppServiceManagement",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowAzureServicesOutbound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "AzureCloud",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          },
          {
            "name": "DenyInternetOutbound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Deny",
              "priority": 4000,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-02-01",
      "name": "nsg-private-endpoints",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowVNetHTTPSInbound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "DenyAllInbound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 4000,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowVNetOutbound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          },
          {
            "name": "DenyAllOutbound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 4000,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-02-01",
      "name": "nsg-databases",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowAppServiceInbound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRanges": [
                "5432",
                "10250-20000"
              ],
              "sourceAddressPrefix": "10.0.2.0/24",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "DenyAllInbound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 4000,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/ddosProtectionPlans', variables('ddosProtectionPlanName'))]",
        "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
        "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-bastion')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-app-services')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-private-endpoints')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-databases')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "ddosProtectionPlan": "[if(parameters('enableDDoSProtection'), json(concat('{\"id\":\"', resourceId('Microsoft.Network/ddosProtectionPlans', variables('ddosProtectionPlanName')), '\"}')), json('null'))]",
        "enableDdosProtection": "[parameters('enableDDoSProtection')]",
        "subnets": [
          {
            "name": "AzureBastionSubnet",
            "properties": {
              "addressPrefix": "10.0.0.0/27",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-bastion')]"
              }
            }
          },
          {
            "name": "private-endpoints",
            "properties": {
              "addressPrefix": "10.0.1.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-private-endpoints')]"
              },
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Disabled",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          },
          {
            "name": "app-services",
            "properties": {
              "addressPrefix": "10.0.2.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-app-services')]"
              },
              "natGateway": {
                "id": "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
              },
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              },
              "delegations": [
                {
                  "name": "Microsoft.Web/serverFarms",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverFarms"
                  }
                }
              ]
            }
          },
          {
            "name": "databases",
            "properties": {
              "addressPrefix": "10.0.3.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-databases')]"
              },
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              },
              "serviceEndpoints": [
                {
                  "service": "Microsoft.KeyVault"
                },
                {
                  "service": "Microsoft.Storage"
                }
              ]
            }
          },
          {
            "name": "application-gateway",
            "properties": {
              "addressPrefix": "10.0.4.0/24",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/bastionHosts",
      "apiVersion": "2021-02-01",
      "name": "[variables('bastionHostName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIpName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ],
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIpName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'AzureBastionSubnet')]"
              }
            }
          }
        ],
        "enableTunneling": true,
        "enableIpConnect": true,
        "enableShareableLink": false,
        "enableKerberos": false
      }
    },
    {
      "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
      "apiVersion": "2021-02-01",
      "name": "[variables('wafPolicyName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "policySettings": {
          "requestBodyCheck": true,
          "maxRequestBodySizeInKb": 128,
          "fileUploadLimitInMb": 100,
          "state": "Enabled",
          "mode": "Prevention"
        },
        "managedRules": {
          "managedRuleSets": [
            {
              "ruleSetType": "OWASP",
              "ruleSetVersion": "3.2",
              "ruleGroupOverrides": []
            },
            {
              "ruleSetType": "Microsoft_BotManagerRuleSet",
              "ruleSetVersion": "0.1"
            }
          ]
        },
        "customRules": [
          {
            "name": "BlockMaliciousUserAgents",
            "priority": 100,
            "ruleType": "MatchRule",
            "action": "Block",
            "matchConditions": [
              {
                "matchVariables": [
                  {
                    "variableName": "RequestHeaders",
                    "selector": "User-Agent"
                  }
                ],
                "operator": "Contains",
                "negationConditon": false,
                "matchValues": [
                  "sqlmap",
                  "nikto",
                  "nmap"
                ]
              }
            ]
          },
          {
            "name": "RateLimitRule",
            "priority": 200,
            "ruleType": "RateLimitRule",
            "action": "Block",
            "rateLimitDurationInMinutes": 1,
            "rateLimitThreshold": 100,
            "matchConditions": [
              {
                "matchVariables": [
                  {
                    "variableName": "RemoteAddr"
                  }
                ],
                "operator": "IPMatch",
                "negationConditon": false,
                "matchValues": [
                  "0.0.0.0/0"
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkWatchers",
      "apiVersion": "2021-02-01",
      "name": "[variables('networkWatcherName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/networkWatchers/flowLogs",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('networkWatcherName'), '/flowlog-nsg-app-services')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkWatchers', variables('networkWatcherName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('flowLogStorageName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-app-services')]"
      ],
      "properties": {
        "targetResourceId": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-app-services')]",
        "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('flowLogStorageName'))]",
        "enabled": true,
        "retentionPolicy": {
          "days": 90,
          "enabled": true
        },
        "format": {
          "type": "JSON",
          "version": 2
        },
        "flowAnalyticsConfiguration": {
          "networkWatcherFlowAnalyticsConfiguration": {
            "enabled": false
          }
        }
      }
    }
  ],
  "outputs": {
    "virtualNetworkName": {
      "type": "string",
      "value": "[variables('virtualNetworkName')]"
    },
    "virtualNetworkResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
    },
    "bastionHostName": {
      "type": "string",
      "value": "[variables('bastionHostName')]"
    },
    "applicationGatewaySubnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'application-gateway')]"
    },
    "appServiceSubnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'app-services')]"
    },
    "privateEndpointSubnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'private-endpoints')]"
    },
    "databaseSubnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'databases')]"
    },
    "wafPolicyId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', variables('wafPolicyName'))]"
    },
    "networkSecurityConfiguration": {
      "type": "object",
      "value": {
        "ddosProtectionEnabled": "[parameters('enableDDoSProtection')]",
        "bastionHostEnabled": true,
        "wafEnabled": true,
        "networkSegmentation": true,
        "privateEndpointsEnabled": true,
        "flowLoggingEnabled": true,
        "securityLevel": "HIPAA-Compliant"
      }
    }
  }
}